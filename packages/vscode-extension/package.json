{
  "name": "prettify-ts",
  "publisher": "MylesMurphy",
  "license": "MIT",
  "private": true,
  "version": "0.3.0",
  "main": "./out/extension.js",
  "scripts": {
    "build": "tsc",
    "esbuild": "esbuild ./src/extension.ts --bundle --minify --sourcemap --outfile=out/extension.js --external:vscode --external:typescript --format=cjs --platform=node",
    "vscode:prepublish": "npm run esbuild",
    "package": "vsce --version && vsce package --dependencies"
  },
  "dependencies": {
    "@prettify-ts/typescript-plugin": "*",
    "typescript": "^5.3.3"
  },
  "devDependencies": {
    "@types/node": "18.x",
    "@types/vscode": "^1.44.0",
    "@vscode/vsce": "^3.4.2",
    "esbuild": "^0.19.10"
  },
  "displayName": "Prettify TypeScript: Better Type Previews",
  "description": "View \"prettified\" and nested types in hover tooltips.",
  "preview": false,
  "icon": "assets/logo.png",
  "engines": {
    "vscode": "^1.44.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mylesmmurphy/prettify-ts"
  },
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Visualization",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "contributes": {
    "typescriptServerPlugins": [
      {
        "name": "@prettify-ts/typescript-plugin",
        "enableForWorkspaceTypeScriptVersions": true
      }
    ],
    "commands": [
      {
        "command": "prettify-ts.toggle",
        "title": "Toggle Preview",
        "category": "Prettify TS"
      },
      {
        "command": "prettify-ts.copyPrettifiedType",
        "title": "Copy Prettified Type",
        "category": "Prettify TS"
      },
      {
        "command": "prettify-ts.fullCopyPrettifiedType",
        "title": "Copy Fully Prettified Type",
        "category": "Prettify TS"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "prettify.copy",
          "group": "9_cutcopypaste",
          "when": "editorLangId == 'typescript' || editorLangId == 'typescriptreact'"
        }
      ],
      "prettify.copy": [
        {
          "command": "prettify-ts.copyPrettifiedType"
        },
        {
          "command": "prettify-ts.fullCopyPrettifiedType"
        }
      ]
    },
    "submenus": [
      {
        "id": "prettify.copy",
        "label": "Prettify"
      }
    ],
    "configuration": {
      "title": "Prettify TS",
      "properties": {
        "prettify-ts.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable Prettify TS."
        },
        "prettify-ts.typeIndentation": {
          "type": "number",
          "default": 4,
          "minimum": 0
        },
        "prettify-ts.maxDepth": {
          "type": "number",
          "default": 1,
          "minimum": 0
        },
        "prettify-ts.maxProperties": {
          "type": "number",
          "default": 1000,
          "minimum": 1,
          "description": "The maximum number of properties (including sub-properties) to show in a type preview. The number of lines shown will be at most this number."
        },
        "prettify-ts.maxSubProperties": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "description": "The maximum number of properties to show in a nested (depth greater than 1) type."
        },
        "prettify-ts.maxUnionMembers": {
          "type": "number",
          "default": 15,
          "minimum": 1,
          "description": "The maximum number of members to show in a union."
        },
        "prettify-ts.maxFunctionSignatures": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "description": "The maximum number of function signatures to show."
        },
        "prettify-ts.hidePrivateProperties": {
          "type": "boolean",
          "default": true,
          "description": "Hide private properties on an object."
        },
        "prettify-ts.unwrapFunctions": {
          "type": "boolean",
          "default": true,
          "description": "Prettify function parameters and return types."
        },
        "prettify-ts.unwrapArrays": {
          "type": "boolean",
          "default": true,
          "description": "Prettify array element types."
        },
        "prettify-ts.unwrapPromises": {
          "type": "boolean",
          "default": true,
          "description": "Prettify the resolved type of a promise."
        },
        "prettify-ts.skippedTypeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Array",
            "ArrayBuffer",
            "Buffer",
            "Date",
            "Element",
            "Error",
            "Map",
            "Number",
            "RegExp",
            "Set",
            "String",
            "Symbol"
          ],
          "description": "Types that won't be unwrapped, by name. Generic types are supported, with their arguments replaced by ellipses (e.g., `ZodObject<...>`)."
        },
        "prettify-ts.unwrapGenericArgumentsTypeNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Promise",
            "Set",
            "Map",
            "Observable"
          ],
          "description": "A list of generic type names whose arguments will be unwrapped, instead of the apparent (final) type."
        },
        "prettify-ts.maxCharacters": {
          "type": "number",
          "default": 20000,
          "minimum": 0,
          "maximum": 99000,
          "description": "The maximum number of string characters to show in a type preview before cutting off. (High performance impact)"
        }
      }
    }
  }
}
